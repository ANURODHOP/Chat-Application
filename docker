# Use official Python base image
FROM python:3.11-slim

# Set environment variables to optimize Python
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set working directory to the folder with requirements.txt
WORKDIR /app/django

# Install system dependencies (GCC for building packages, plus others for psycopg2 if using Postgres)
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements.txt and install dependencies
COPY django/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy the Django project (selective copy to focus on backend)
COPY django/ /app/django/

# Collect static files (assumes STATIC_ROOT is configured in settings.py)
RUN python chatapp/manage.py collectstatic --noinput

# Note: Migrations are not run here during build, as they require a database connection.
# Run them at runtime or via Railway's deployment process after setting up the DB.

# Expose the port (Railway will use $PORT)
EXPOSE 8000

# Start Daphne, navigating to the chatapp subfolder
CMD ["sh", "-c", "cd chatapp && daphne -b 0.0.0.0 -p $PORT chatapp.asgi:application"]
